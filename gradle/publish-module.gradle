apply plugin: 'maven-publish'
apply plugin: 'signing'

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {
        // For Android libraries
        from android.sourceSets.main.java.srcDirs
        from android.sourceSets.main.kotlin.srcDirs
    } else {
        // For pure Kotlin libraries, in case you have them
        from sourceSets.main.java.srcDirs
        from sourceSets.main.kotlin.srcDirs
    }
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set('javadoc')
    from dokkaJavadoc.outputDirectory
}

artifacts {
    archives androidSourcesJar
    archives javadocJar
}

group = PUBLISH_GROUP_ID
version = PUBLISH_VERSION

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId PUBLISH_GROUP_ID
                artifactId PUBLISH_ARTIFACT_ID
                version PUBLISH_VERSION

                // Two artifacts, the `aar` (or `jar`) and the sources
                if (project.plugins.findPlugin("com.android.library")) {
                    from components.release
                } else {
                    artifact jar
                }

                artifact androidSourcesJar
                artifact javadocJar

                pom {
                    name = PUBLISH_ARTIFACT_ID
                    description = PUBLISH_DESCRIPTION
                    url = rootProject.ext.githubRepoUrl
                    licenses {
                        license {
                            name = "The MIT License (MIT)"
                            url = "${rootProject.ext.githubRepoUrl}/blob/master/LICENSE"
                            distribution = "repo"
                        }
                    }
                    developers {
                        developer {
                            id = "esnaultdev"
                            name = "Matthieu Esnault"
                            email = "matthieu.esn0@gmail.com"
                        }
                    }

                    scm {
                        connection = "scm:git:github.com/${rootProject.ext.githubRepoName}.git"
                        developerConnection = "scm:git:ssh://github.com/${rootProject.ext.githubRepoName}.git"
                        url = "https://github.com/${rootProject.ext.githubRepoName}/tree/master"
                    }
                }
            }
        }
    }
}

ext["signing.keyId"] = rootProject.ext["signing.keyId"]
ext["signing.password"] = rootProject.ext["signing.password"]
ext["signing.secretKeyRingFile"] = rootProject.ext["signing.secretKeyRingFile"]

signing {
    sign publishing.publications
}
